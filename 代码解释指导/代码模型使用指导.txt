代码结构以及功能划分介绍:
	此代码工具分为三部分:
	1. 训练数据生成(如果之前有训练好的模型就可以省去这一步), 生成数据之后需要手动添加label(从邻区切换指标表中vlookup相关的邻区对, 具体参见图片指导) 
		[需要输入工参和TA指标文件, 注意文件格式和列名]
	2. 模型创建与训练(如果之前有训练好的模型就可以省去这一步) 
		[需要输入训练数据, 训练数据由步骤1获得部分特征数据后(为了加速生成文件速度,第一步自动生成的数据是多个子csv文件, 需要手动合并), 手动添加label完
		成最终的训练数据]
	3. 利用训练好的模型进行预测 
		[需要输入工参文件/待加邻区的小区列表文件以及训练好的模型] [训练好的模型由步骤2获得] 
		[工参文件/待加邻区的小区列表文件模板参见 .\阿尔邻区数据 文件夹下的 
			工参文件(CNO格式): 		Project Parameters-1-LAN1-201911251518(Site Type)_纯宏站.xls[内有TA指标sheet页, 注意格式以及列名]
			待加邻区的小区列表文件:	RelationPlan.xlsx
		注意格式, 目前输入文件支持CNO格式.]

训练数据介绍:
	本模型输入的训练数据均为地理信息:
	训练数据的特征值选用一下5种类:
		1. Dist_time: 主小区与邻小区的距离与主小区与其周边最近非共站小区的距离的比值
		2. LayerNum:邻区相对于主小区的层级数, 该值由德劳内三角剖分获取(0层代表共站小区)
		3. cover_coef: 主小区的评估覆盖于邻小区的评估覆盖的交叠系数, 该系数由两个覆盖区域polygen的 交叠面积/min(主小区覆盖面积,邻小区覆盖面积) 计算所得[注意1]
		4. SFaceToN_Degree: 该值表征邻小区与主小区的连线与主小区方位角矢量之夹角,  该角度越小, 表示主小区对邻小区的对打性越高[注意3]
		5. NFaceToS_Degree: 该值表征邻小区与主小区的连线与邻小区方位角矢量之夹角,  该角度越小, 表示邻小区对主小区的对打性越高[注意3]

	注意1: 评估小区的覆盖区域是, 如果有TA信息提供,则使用TA信息, 如果没有(例如为新站规划邻区), 则直接使用该小区的地理分布以及该小区在主打方向上的最近3个非共站小区的距
	离的中位数作为预估该小区覆盖情况.
	注意2:工具训练钱注意剔除室分和地铁/铁路等特殊小区, 仅使用普通宏站的工参数据进行训练.
	注意3:SFaceToN_Degree和NFaceToS_Degree是范围为0~180度的角度数据, 训练时自动回进行归一化处理(自动除以180)
	注意4:其余特征没有进行归一化处理, 测试发现其余特征如果进行了归一化处理, 效果反而稍差一些.

训练模型介绍:
	训练模型为8层神经网络, 隐藏层中每层之间加0.3的DropOut层来防止过拟合, 8层神经网络的神经元的数量是[1024, 512, 256, 128, 64, 32, 16, 1], 隐藏层每层的激活函数为relu函数, 
本神经网络并未加正则化项, 测试发现由于训练数据高达40W条(测试数据大约5W条), 而输入维度只有5维, 充足的训练数据量加上DropOut层的应用已经基本能够保证模型不会过拟合. 层数只有
8层, 没有使用ResNet技术防止梯度爆炸/弥散. 最终输出层没有添加激活函数, 训练时候loss函数中加上了激活函数的功能, 预测时候以-1为界进行预测(区别于sigmoid函数的以0为界的预测). 如
果预测值大约-1的邻区对过多,则只取预测值比较大的钱24条进行邻区添加.
	生成的邻区经过分析发现, 基本能够保证主切换邻区成功添加, 为了保险起见, 输出的值不进行sigmoid函数处理(sigmoid是以0为界)取0/1(加/不加), 而是以-1为界, 预测值大于-1则邻
区添加, 小于-1则邻区不添加, 如果大于-1的邻区太多, 取预测值最大的前24个邻区作为添加的邻区. 反向邻区是同样的原理进行添加.
	模型验证的正确率为88.4%, 该正确率是建立在以sigmoid函数为输出激活函数的基础上的, 正式使用是以-1为界进行判断的, 正确率会更高. 加上考虑所用邻区数据中也有部分冗余/缺
失邻区等缺陷, 所以我们没有单纯的使用邻区添加与否衡量模型的效果, 而是以判断主切换邻区(切换尝试次数是否较多)是否添加来判断, 人工测试之后,基本能保证主邻区正确添加.

生成结果介绍:
	最终生成的结果是每个小区生成两个文件: 正向邻区和反向邻区, 每个文件中是一个pandas.DataFrame格式的csv数据, 其中最后一列表征该邻区是否添加.